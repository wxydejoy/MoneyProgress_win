name: Windows MinGW
on: 
  workflow_dispatch:
  push:
    paths:
      - '*.pro'
      - 'src/**'
      - '.github/workflows/windows-mingw.yml'
  pull_request:
    paths:
      - '*.pro'
      - 'src/**'
      - '.github/workflows/windows-mingw.yml' 
jobs:
  build:
    name: Build
    runs-on: windows-2019
    strategy:
      matrix:
        include:
          - qt_arch: win32_mingw81
            qt_ver: 5.15.2
            qt_tools: "tools_mingw,8.1.0-1-202004170606,qt.tools.win32_mingw810"
            qt_tools_mingw_install: mingw810_32
    env:
      targetName: HelloActions-Qt.exe
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_ver }}
          aqtversion: '==2.0.5'
          arch: ${{ matrix.qt_arch }}
          tools: ${{ matrix.qt_tools }}
          cached: 'false'
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Qt 5 environment configuration
        if: ${{ startsWith( matrix.qt_ver, 5 ) }}
        shell: pwsh
        run: |
          Write-Output "${{ env.Qt5_DIR }}/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          Write-Output "${{ env.Qt5_DIR }}/../../Tools/${{ matrix.qt_tools_mingw_install }}/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
     
      - name: where is qmake & where is mingw32-make
        shell: pwsh
        run: |
          Get-Command -Name 'cmake' | Format-List
          Get-Command -Name 'mingw32-make' | Format-List
      - name: mingw-build
        id: build
        shell: cmd
        run: |
          cmake
          mingw32-make
      - name: package
        id: package      
        env:
          archiveName: ${{ matrix.qt_ver }}-${{ matrix.qt_target }}-${{ matrix.qt_arch }}
        shell: pwsh
        run: |
          & scripts\windows-mingw-publish.ps1 ${env:archiveName} ${env:targetName}
           $name = ${env:archiveName}
           echo "::set-output name=packageName::$name"       
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.package.outputs.packageName }}
          path: ${{ steps.package.outputs.packageName }}
      - name: uploadRelease
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.package.outputs.packageName }}.zip
          asset_name: ${{ steps.package.outputs.packageName }}.zip
          tag: ${{ github.ref }}
          overwrite: true 
